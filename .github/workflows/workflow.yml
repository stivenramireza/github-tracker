name: github-tracker

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  linter:
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v3
        with:
          python-version: "3.12"

      - name: Install dependencies
        run: pip install --upgrade -r requirements_local.txt

      - name: Check linter
        run: black --check .

  tests:
    runs-on: ubuntu-22.04
    needs: linter

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v3
        with:
          python-version: "3.12"

      - name: Install dependencies
        run: pip install --upgrade -r requirements.txt

      - name: Run unit tests
        run: coverage run -m pytest --verbose

      - name: Generate coverage report
        run: coverage report -m

  build:
    runs-on: ubuntu-22.04
    needs: tests
    env:
      AWS_ACCESS_KEY_ID: ${{secrets.AWS_ACCESS_KEY_ID}}
      AWS_SECRET_ACCESS_KEY: ${{secrets.AWS_SECRET_ACCESS_KEY}}
      AWS_REGION: ${{secrets.AWS_REGION}}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v3
        with:
          python-version: "3.12"

      - name: Build lambda layers
        run: sh ./scripts/build_lambda_layers.sh

      - uses: actions/upload-artifact@v2
        with:
          name: dependencies
          path: ./dist/github-tracker-dependencies.zip

      - name: Build lambda functions
        run: sh ./scripts/build_lambda_functions.sh

  deploy:
    runs-on: ubuntu-22.04
    needs: build
    defaults:
      run:
        working-directory: infraestructure
    env:
      AWS_ACCESS_KEY_ID: ${{secrets.AWS_ACCESS_KEY_ID}}
      AWS_SECRET_ACCESS_KEY: ${{secrets.AWS_SECRET_ACCESS_KEY}}
      AWS_REGION: ${{secrets.AWS_REGION}}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Initialize the config
        run: terraform init

      - name: Check if the config is formatted
        run: terraform fmt -check

      - name: Generate the execution plan
        run: terraform plan

      - name: Apply the execution plan in order to deploy the infraestructure
        run: terraform apply
